<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.threego.algomemberservice.member.query.dao.MemberMapper">

    <!-- 회원: 정보 조회 -->
    <select id="selectMemberById" resultType="com.threego.algomemberservice.member.query.dto.MemberDetailResponseDTO">
        SELECT
               A.ID
             , A.EMAIL
             , A.NICKNAME
             , B.NAME AS RANKNAME
             , A.POINT
             , COUNT(C.ATTEND_AT) AS ATTENDANCECOUNT
             , A.CREATED_AT AS CREATEDAT
          FROM MEMBER A
          JOIN MEMBER_RANK B ON A.RANK_ID = B.ID
          LEFT JOIN MEMBER_ATTENDANCE_HISTORY C ON A.ID = C.MEMBER_ID
         WHERE A.ID = #{id}
    </select>

    <!-- 관리자: 특정 회원 목록 조회 -->
    <select id="selectMemberDetailsById"
            resultType="com.threego.algomemberservice.member.query.dto.AdminMemberDetailResponseDTO">
        SELECT
               A.ID
             , A.EMAIL
             , A.NICKNAME
             , B.NAME AS RANKNAME
             , D.NAME AS ROLE
             , A.POINT
             , A.REPORTED_COUNT AS REPORTEDCOUNT
             , A.STATUS AS STATUS
             , A.CREATED_AT AS CREATEDAT
          FROM MEMBER A
          JOIN MEMBER_RANK B ON A.RANK_ID = B.ID
          JOIN MEMBER_ROLE C ON A.ID = C.MEMBER_ID
          JOIN ROLE D ON C.ROLE_ID = D.ID
         WHERE A.ID = #{id}
    </select>

    <!-- 관리자: 전체 회원 목록 조회 -->
    <select id="selectAllMemberDetails"
            resultType="com.threego.algomemberservice.member.query.dto.AdminMemberDetailResponseDTO">
        <!-- offset 자동 계산 -->
        <include refid="com.threego.algomemberservice.common.mapper.CommonMapper.calculateOffset"/>


        SELECT
               A.ID
             , A.EMAIL
             , A.NICKNAME
             , B.NAME AS RANK
             , D.NAME AS ROLE
             , A.POINT
             , A.REPORTED_COUNT AS REPORTEDCOUNT
             , A.STATUS AS STATUS
             , A.CREATED_AT AS CREATEDAT
          FROM MEMBER A
          JOIN MEMBER_RANK B ON A.RANK_ID = B.ID
          JOIN MEMBER_ROLE C ON A.ID = C.MEMBER_ID
          JOIN ROLE D ON C.ROLE_ID = D.ID
        <where>
        <if test="keyword != null and keyword != ''">
            AND (A.EMAIL LIKE CONCAT('%', #{keyword}, '%')
            OR A.NICKNAME LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="status != null and status != ''">
            AND A.STATUS = #{status}
        </if>
        </where>
        ORDER BY
        <choose>
            <when test="sortBy != null and sortDirection != null">
                ${sortBy} ${sortDirection}
            </when>
            <otherwise>
                A.CREATED_AT DESC
            </otherwise>
        </choose>
        <include refid="com.threego.algomemberservice.common.mapper.CommonMapper.pagination"/>
    </select>

    <select id="findNickNameAndRankNameById" resultType="com.threego.algomemberservice.member.query.dto.MemberInfoResponseDTO">
        SELECT
               B.NAME AS RANKNAME
             , A.NICKNAME
          FROM MEMBER A
          JOIN MEMBER_RANK B
            ON A.RANK_ID = B.ID
         WHERE A.ID = #{memberId};
    </select>

    <!-- 총 회원 수 -->
    <select id="countAllMembers" resultType="int">
        SELECT COUNT(*)
        FROM MEMBER A
        JOIN MEMBER_ROLE C ON A.ID = C.MEMBER_ID
        JOIN ROLE D ON C.ROLE_ID = D.ID
    <where>
        <if test="keyword != null and keyword != ''">
            AND (A.EMAIL LIKE CONCAT('%', #{keyword}, '%')
            OR A.NICKNAME LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="status != null and status != ''">
            AND A.STATUS = #{status}
        </if>
    </where>
    </select>
</mapper>